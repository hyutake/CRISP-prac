{"ast":null,"code":"var _jsxFileName = \"/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// React components\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TaskList from \"./components/Tasks/TaskList\";\nimport TaskForm from \"./components/Tasks/TaskForm\";\nimport MainHeader from \"./components/Layout/MainHeader\";\nimport { taskActions } from \"./task-slice\"; // Import the task actions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const showTaskForm = useSelector(state => state.ui.showTaskFormModal);\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.task.tasks);\n  useEffect(() => {\n    // Fetch tasks from the API when the component mounts\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"/tasks\"); // Replace \"/products\" with the appropriate API endpoint\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n      const data = await response.json();\n      dispatch(taskActions.setTasks(data)); // Dispatch an action to store the fetched tasks in the Redux store\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const showAddTaskFormHandler = () => {\n    dispatch(taskActions.hideTaskForm()); // Reset the task form state\n    dispatch(uiActions.showAddTaskForm()); // Show the add task form\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), showTaskForm && /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showAddTaskFormHandler,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uxAFwrbq+hE/TEYDiac31yL0BWM=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useEffect","useDispatch","useSelector","TaskList","TaskForm","MainHeader","taskActions","jsxDEV","_jsxDEV","App","_s","showTaskForm","state","ui","showTaskFormModal","dispatch","tasks","task","fetchTasks","response","fetch","ok","Error","data","json","setTasks","error","console","log","showAddTaskFormHandler","hideTaskForm","uiActions","showAddTaskForm","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/App.js"],"sourcesContent":["// React components\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TaskList from \"./components/Tasks/TaskList\";\nimport TaskForm from \"./components/Tasks/TaskForm\";\nimport MainHeader from \"./components/Layout/MainHeader\";\nimport { taskActions } from \"./task-slice\"; // Import the task actions\n\nfunction App() {\n  const showTaskForm = useSelector((state) => state.ui.showTaskFormModal);\n  const dispatch = useDispatch();\n  const tasks = useSelector((state) => state.task.tasks);\n\n  useEffect(() => {\n    // Fetch tasks from the API when the component mounts\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"/tasks\"); // Replace \"/products\" with the appropriate API endpoint\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n      const data = await response.json();\n      dispatch(taskActions.setTasks(data)); // Dispatch an action to store the fetched tasks in the Redux store\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const showAddTaskFormHandler = () => {\n    dispatch(taskActions.hideTaskForm()); // Reset the task form state\n    dispatch(uiActions.showAddTaskForm()); // Show the add task form\n  };\n\n  return (\n    <Fragment>\n      <MainHeader />\n      {showTaskForm && <TaskForm />}\n      <main>\n        <TaskList tasks={tasks} /> {/* Pass the tasks to the TaskList component */}\n        <button onClick={showAddTaskFormHandler}>Add Task</button>\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,SAASC,WAAW,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,YAAY,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,iBAAiB,CAAC;EACvE,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,KAAK,GAAGd,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACK,IAAI,CAACD,KAAK,CAAC;EAEtDhB,SAAS,CAAC,MAAM;IACd;IACAkB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;MACxC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MACxD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,QAAQ,CAACT,WAAW,CAACmB,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;IACnCd,QAAQ,CAACT,WAAW,CAACwB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IACtCf,QAAQ,CAACgB,SAAS,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC;;EAED,oBACExB,OAAA,CAACT,QAAQ;IAAAkC,QAAA,gBACPzB,OAAA,CAACH,UAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACb1B,YAAY,iBAAIH,OAAA,CAACJ,QAAQ;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7B7B,OAAA;MAAAyB,QAAA,gBACEzB,OAAA,CAACL,QAAQ;QAACa,KAAK,EAAEA;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eAC3B7B,OAAA;QAAQ8B,OAAO,EAAET,sBAAuB;QAAAI,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAAC3B,EAAA,CAtCQD,GAAG;EAAA,QACWP,WAAW,EACfD,WAAW,EACdC,WAAW;AAAA;AAAAqC,EAAA,GAHlB9B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}