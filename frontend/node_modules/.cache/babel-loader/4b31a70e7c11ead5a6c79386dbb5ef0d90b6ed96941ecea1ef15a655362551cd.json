{"ast":null,"code":"var _s = $RefreshSig$();\n// taskAPI.js\n\nimport { taskActions } from \"./task-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nconst useFetchTasks = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/tasks\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks from the API.\");\n        }\n        const data = await response.json();\n        // dispatch(taskActions.setTask(data));\n        return data;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTasks();\n  }, [dispatch]);\n  const setTasks = tasks => {\n    dispatch(taskActions.setTask(tasks));\n  };\n  return {\n    setTasks\n  };\n};\n_s(useFetchTasks, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport default useFetchTasks;","map":{"version":3,"names":["taskActions","useDispatch","useEffect","useFetchTasks","_s","dispatch","fetchTasks","response","fetch","ok","Error","data","json","error","console","log","setTasks","tasks","setTask"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/store/taskAPI.js"],"sourcesContent":["// taskAPI.js\n\nimport { taskActions } from \"./task-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nconst useFetchTasks = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/tasks\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks from the API.\");\n        }\n        const data = await response.json();\n        // dispatch(taskActions.setTask(data));\n        return data\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchTasks();\n  }, [dispatch]);\n\n  const setTasks = (tasks) => {\n    dispatch(taskActions.setTask(tasks));\n  };\n\n  return { setTasks };\n};\n\nexport default useFetchTasks;\n"],"mappings":";AAAA;;AAEA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,OAAO;AAEjC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC;QACA,OAAOD,IAAI;MACb,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,MAAMW,QAAQ,GAAIC,KAAK,IAAK;IAC1BZ,QAAQ,CAACL,WAAW,CAACkB,OAAO,CAACD,KAAK,CAAC,CAAC;EACtC,CAAC;EAED,OAAO;IAAED;EAAS,CAAC;AACrB,CAAC;AAACZ,EAAA,CA1BID,aAAa;EAAA,QACAF,WAAW;AAAA;AA2B9B,eAAeE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}