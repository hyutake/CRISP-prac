{"ast":null,"code":"export const fetchTasks = () => {\n  return async dispatch => {\n    try {\n      const response = await fetch(\"http://localhost:3001/tasks\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n      const data = await response.json();\n      dispatch(setTasks(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"names":["fetchTasks","dispatch","response","fetch","ok","Error","data","json","setTasks","error","console","log"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/store/taskAPI.js"],"sourcesContent":["export const fetchTasks = () => {\n    return async (dispatch) => {\n      try {\n        const response = await fetch(\"http://localhost:3001/tasks\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks from the API.\");\n        }\n        const data = await response.json();\n        dispatch(setTasks(data));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MACxD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCN,QAAQ,CAACO,QAAQ,CAACF,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}