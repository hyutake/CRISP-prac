{"ast":null,"code":"var _jsxFileName = \"/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TaskList from \"./components/Tasks/TaskList\";\nimport TaskForm from \"./components/Tasks/TaskForm\";\nimport MainHeader from \"./components/Layout/MainHeader\";\nimport { useEffect } from \"react\";\nimport { taskActions } from \"./store/task-slice\";\nimport \"./App.css\"; // Import your CSS file\nimport { fetchTasks, useInitTasks } from \"./store/useFetchTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const showTaskForm = useSelector(state => state.ui.showTaskFormModal);\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useInitTasks();\n  useEffect(() => {\n    //dispatch(fetchTasks());\n\n    setIsLoaded(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), showTaskForm && /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-text\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-dots\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XmcR1o0u3y3xjK0PqBPREABS6lY=\", false, function () {\n  return [useSelector, useDispatch, useInitTasks];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useState","useSelector","useDispatch","TaskList","TaskForm","MainHeader","useEffect","taskActions","fetchTasks","useInitTasks","jsxDEV","_jsxDEV","App","_s","showTaskForm","state","ui","showTaskFormModal","dispatch","isLoaded","setIsLoaded","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/App.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TaskList from \"./components/Tasks/TaskList\";\nimport TaskForm from \"./components/Tasks/TaskForm\";\nimport MainHeader from \"./components/Layout/MainHeader\";\nimport { useEffect } from \"react\";\nimport { taskActions } from \"./store/task-slice\";\nimport \"./App.css\"; // Import your CSS file\nimport { fetchTasks , useInitTasks} from \"./store/useFetchTasks\";\n\nfunction App() {\n  const showTaskForm = useSelector((state) => state.ui.showTaskFormModal);\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  \n  useInitTasks();\n\n  useEffect(() => {\n    //dispatch(fetchTasks());\n    \n    setIsLoaded(true);\n  }, []);\n\n\n  return (\n    <Fragment>\n      <MainHeader />\n      {showTaskForm && <TaskForm />}\n      <main>\n        {!isLoaded ? (\n          <div className=\"loading-container\">\n            <p className=\"loading-text\">Loading</p>\n            <div className=\"loading-dots\">\n              <div className=\"dot\"></div>\n              <div className=\"dot\"></div>\n              <div className=\"dot\"></div>\n            </div>\n          </div>\n        ) : (\n          <TaskList />\n        )}\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,WAAW,CAAC,CAAC;AACpB,SAASC,UAAU,EAAGC,YAAY,QAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,YAAY,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,iBAAiB,CAAC;EACvE,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE/CS,YAAY,CAAC,CAAC;EAEdH,SAAS,CAAC,MAAM;IACd;;IAEAc,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACET,OAAA,CAACZ,QAAQ;IAAAsB,QAAA,gBACPV,OAAA,CAACN,UAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACbX,YAAY,iBAAIH,OAAA,CAACP,QAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7Bd,OAAA;MAAAU,QAAA,EACG,CAACF,QAAQ,gBACRR,OAAA;QAAKe,SAAS,EAAC,mBAAmB;QAAAL,QAAA,gBAChCV,OAAA;UAAGe,SAAS,EAAC,cAAc;UAAAL,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvCd,OAAA;UAAKe,SAAS,EAAC,cAAc;UAAAL,QAAA,gBAC3BV,OAAA;YAAKe,SAAS,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3Bd,OAAA;YAAKe,SAAS,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3Bd,OAAA;YAAKe,SAAS,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENd,OAAA,CAACR,QAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAACZ,EAAA,CAlCQD,GAAG;EAAA,QACWX,WAAW,EACfC,WAAW,EAG5BO,YAAY;AAAA;AAAAkB,EAAA,GALLf,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}