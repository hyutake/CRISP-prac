{"ast":null,"code":"var _jsxFileName = \"/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TaskList from \"./components/Tasks/TaskList\";\nimport TaskForm from \"./components/Tasks/TaskForm\";\nimport MainHeader from \"./components/Layout/MainHeader\";\nimport { useEffect } from \"react\";\nimport { taskActions } from \"./store/task-slice\";\nimport \"./App.css\"; // Import your CSS file\nimport fetchTasks from \"./store/useFetchTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const showTaskForm = useSelector((state) => state.ui.showTaskFormModal);\n  // const dispatch = useDispatch();\n  // const [isLoaded, setIsLoaded] = useState(true);\n\n  // useEffect(() => {\n  //   // Fetch tasks from the API when the component mounts\n  //   const fetchTasks = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:3001/tasks'); // Replace with the appropriate API endpoint\n  //       if (!response.ok) {\n  //         throw new Error('Failed to fetch tasks from the API.');\n  //       }\n  //       const data = await response.json();\n  //       dispatch(taskActions.setTask(data)); // Dispatch an action to store the fetched tasks in the Redux store\n  //       setIsLoaded(true); // Set isLoaded to true once the tasks are fetched\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   fetchTasks();\n  // }, [dispatch]);\n  const showTaskForm = useSelector(state => state.ui.showTaskFormModal);\n  const isLoaded = useSelector(state => state.ui.isLoaded);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTasks()); // Dispatch the fetchTasks action\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), showTaskForm && /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-text\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-dots\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HkG3+ADggy5t0zknIA2mHRRGTrQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useState","useSelector","useDispatch","TaskList","TaskForm","MainHeader","useEffect","taskActions","fetchTasks","jsxDEV","_jsxDEV","App","_s","showTaskForm","state","ui","showTaskFormModal","isLoaded","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/App.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TaskList from \"./components/Tasks/TaskList\";\nimport TaskForm from \"./components/Tasks/TaskForm\";\nimport MainHeader from \"./components/Layout/MainHeader\";\nimport { useEffect } from \"react\";\nimport { taskActions } from \"./store/task-slice\";\nimport \"./App.css\"; // Import your CSS file\nimport fetchTasks from \"./store/useFetchTasks\";\n\nfunction App() {\n  // const showTaskForm = useSelector((state) => state.ui.showTaskFormModal);\n  // const dispatch = useDispatch();\n  // const [isLoaded, setIsLoaded] = useState(true);\n\n  // useEffect(() => {\n  //   // Fetch tasks from the API when the component mounts\n  //   const fetchTasks = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:3001/tasks'); // Replace with the appropriate API endpoint\n  //       if (!response.ok) {\n  //         throw new Error('Failed to fetch tasks from the API.');\n  //       }\n  //       const data = await response.json();\n  //       dispatch(taskActions.setTask(data)); // Dispatch an action to store the fetched tasks in the Redux store\n  //       setIsLoaded(true); // Set isLoaded to true once the tasks are fetched\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   fetchTasks();\n  // }, [dispatch]);\n  const showTaskForm = useSelector((state) => state.ui.showTaskFormModal);\n  const isLoaded = useSelector((state) => state.ui.isLoaded);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTasks()); // Dispatch the fetchTasks action\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      <MainHeader />\n      {showTaskForm && <TaskForm />}\n      <main>\n        {!isLoaded ? (\n          <div className=\"loading-container\">\n            <p className=\"loading-text\">Loading</p>\n            <div className=\"loading-dots\">\n              <div className=\"dot\"></div>\n              <div className=\"dot\"></div>\n              <div className=\"dot\"></div>\n            </div>\n          </div>\n        ) : (\n          <TaskList />\n        )}\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,WAAW,CAAC,CAAC;AACpB,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAMC,YAAY,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,iBAAiB,CAAC;EACvE,MAAMC,QAAQ,GAAGhB,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACE,QAAQ,CAAC;EAC1D,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BI,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;EAEd,oBACER,OAAA,CAACX,QAAQ;IAAAoB,QAAA,gBACPT,OAAA,CAACL,UAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACbV,YAAY,iBAAIH,OAAA,CAACN,QAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7Bb,OAAA;MAAAS,QAAA,EACG,CAACF,QAAQ,gBACRP,OAAA;QAAKc,SAAS,EAAC,mBAAmB;QAAAL,QAAA,gBAChCT,OAAA;UAAGc,SAAS,EAAC,cAAc;UAAAL,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvCb,OAAA;UAAKc,SAAS,EAAC,cAAc;UAAAL,QAAA,gBAC3BT,OAAA;YAAKc,SAAS,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3Bb,OAAA;YAAKc,SAAS,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3Bb,OAAA;YAAKc,SAAS,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENb,OAAA,CAACP,QAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAACX,EAAA,CAnDQD,GAAG;EAAA,QAuBWV,WAAW,EACfA,WAAW,EACXC,WAAW;AAAA;AAAAuB,EAAA,GAzBrBd,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}