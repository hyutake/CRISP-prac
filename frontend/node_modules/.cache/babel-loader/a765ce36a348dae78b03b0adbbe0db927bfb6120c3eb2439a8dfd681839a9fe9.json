{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { fetchTasks } from \"./useFetchTasks\";\nconst initialTaskState = {\n  tasks: []\n};\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState: initialTaskState,\n  reducers: {\n    addTask(state, action) {\n      const task = action.payload;\n      // Make API request to add the task\n      axios.post(\"http://localhost:3001/tasks\", {\n        title: task.title,\n        description: task.description,\n        deadline: task.deadline\n      }).then(() => {\n        // Fetch updated tasks after adding\n        state.tasks = [];\n        action.payload.dispatch(fetchTasks()); // Dispatch the fetchTasks thunk action\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    removeTask(state, action) {\n      const id = action.payload;\n      const proceed = window.confirm(\"Delete task?\");\n      if (proceed) {\n        state.tasks = state.tasks.filter(task => task._id !== id);\n        // Make API request to remove the task\n        axios.delete(`http://localhost:3001/tasks/${id}`).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    editTask(state, action) {\n      const {\n        id,\n        title,\n        description,\n        deadline,\n        completed\n      } = action.payload;\n      // Make API request to update the task\n      axios.put(`http://localhost:3001/tasks/${id}`, {\n        title,\n        description,\n        deadline,\n        completed\n      }).then(() => {\n        // Fetch updated tasks after editing\n        state.tasks = [];\n        action.payload.dispatch(fetchTasks()); // Dispatch the fetchTasks thunk action\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    setTask(state, action) {\n      const tasks = action.payload;\n      tasks.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n      state.tasks = tasks;\n    }\n  }\n});\nexport const taskActions = taskSlice.actions;\nexport default taskSlice;","map":{"version":3,"names":["createSlice","axios","fetchTasks","initialTaskState","tasks","taskSlice","name","initialState","reducers","addTask","state","action","task","payload","post","title","description","deadline","then","dispatch","catch","error","console","log","removeTask","id","proceed","window","confirm","filter","_id","delete","editTask","completed","put","setTask","sort","a","b","Date","taskActions","actions"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/store/task-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { fetchTasks } from \"./useFetchTasks\";\n\nconst initialTaskState = {\n  tasks: [],\n};\n\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState: initialTaskState,\n  reducers: {\n    addTask(state, action) {\n      const task = action.payload;\n      // Make API request to add the task\n      axios\n        .post(\"http://localhost:3001/tasks\", {\n          title: task.title,\n          description: task.description,\n          deadline: task.deadline,\n        })\n        .then(() => {\n          // Fetch updated tasks after adding\n          state.tasks = [];\n          action.payload.dispatch(fetchTasks()); // Dispatch the fetchTasks thunk action\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    removeTask(state, action) {\n      const id = action.payload;\n      const proceed = window.confirm(\"Delete task?\");\n\n      if (proceed) {\n        state.tasks = state.tasks.filter((task) => task._id !== id);\n        // Make API request to remove the task\n        axios\n          .delete(`http://localhost:3001/tasks/${id}`)\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    },\n    editTask(state, action) {\n      const { id, title, description, deadline, completed } = action.payload;\n      // Make API request to update the task\n      axios\n        .put(`http://localhost:3001/tasks/${id}`, {\n          title,\n          description,\n          deadline,\n          completed,\n        })\n        .then(() => {\n          // Fetch updated tasks after editing\n          state.tasks = [];\n          action.payload.dispatch(fetchTasks()); // Dispatch the fetchTasks thunk action\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    setTask(state, action) {\n      const tasks = action.payload;\n      tasks.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n      state.tasks = tasks;\n    },\n  },\n});\n\n\n\n\n\nexport const taskActions = taskSlice.actions;\nexport default taskSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B;MACAZ,KAAK,CACFa,IAAI,CAAC,6BAA6B,EAAE;QACnCC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,WAAW,EAAEJ,IAAI,CAACI,WAAW;QAC7BC,QAAQ,EAAEL,IAAI,CAACK;MACjB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;QACV;QACAR,KAAK,CAACN,KAAK,GAAG,EAAE;QAChBO,MAAM,CAACE,OAAO,CAACM,QAAQ,CAACjB,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDG,UAAUA,CAACd,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMc,EAAE,GAAGd,MAAM,CAACE,OAAO;MACzB,MAAMa,OAAO,GAAGC,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC;MAE9C,IAAIF,OAAO,EAAE;QACXhB,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACyB,MAAM,CAAEjB,IAAI,IAAKA,IAAI,CAACkB,GAAG,KAAKL,EAAE,CAAC;QAC3D;QACAxB,KAAK,CACF8B,MAAM,CAAE,+BAA8BN,EAAG,EAAC,CAAC,CAC3CL,KAAK,CAAEC,KAAK,IAAK;UAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB,CAAC,CAAC;MACN;IACF,CAAC;IACDW,QAAQA,CAACtB,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAM;QAAEc,EAAE;QAAEV,KAAK;QAAEC,WAAW;QAAEC,QAAQ;QAAEgB;MAAU,CAAC,GAAGtB,MAAM,CAACE,OAAO;MACtE;MACAZ,KAAK,CACFiC,GAAG,CAAE,+BAA8BT,EAAG,EAAC,EAAE;QACxCV,KAAK;QACLC,WAAW;QACXC,QAAQ;QACRgB;MACF,CAAC,CAAC,CACDf,IAAI,CAAC,MAAM;QACV;QACAR,KAAK,CAACN,KAAK,GAAG,EAAE;QAChBO,MAAM,CAACE,OAAO,CAACM,QAAQ,CAACjB,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDc,OAAOA,CAACzB,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMP,KAAK,GAAGO,MAAM,CAACE,OAAO;MAC5BT,KAAK,CAACgC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACpB,QAAQ,CAAC,GAAG,IAAIsB,IAAI,CAACD,CAAC,CAACrB,QAAQ,CAAC,CAAC;MACjEP,KAAK,CAACN,KAAK,GAAGA,KAAK;IACrB;EACF;AACF,CAAC,CAAC;AAMF,OAAO,MAAMoC,WAAW,GAAGnC,SAAS,CAACoC,OAAO;AAC5C,eAAepC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}