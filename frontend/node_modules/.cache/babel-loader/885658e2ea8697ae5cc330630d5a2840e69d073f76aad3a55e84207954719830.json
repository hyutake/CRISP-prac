{"ast":null,"code":"import axios from \"axios\";\nimport { taskActions } from \"./task-slice\";\nexport const fetchTasks = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/tasks\");\n      if (response.status === 200) {\n        const tasks = response.data;\n        console.log(\"fetching\" + tasks);\n        //dispatch(taskActions.setTask(tasks));\n\n        return tasks;\n      } else {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// export const setTasks = () => {\n//   return async (dispatch) => {\n//       tasks.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n//       while (state.tasks != action.payload){\n//         state.tasks = action.payload;\n//     }\n//   }\n// }\n\nexport const setTasks = (state, tasks) => {\n  return dispatch => {\n    console.log(\"lol\");\n    const sortedTasks = tasks.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n    //dispatch(taskActions.setTask(sortedTasks));\n    state.tasks = sortedTasks;\n  };\n};\n\n// import axios from \"axios\";\n// import { taskActions } from \"./task-slice\";\n// import { useDispatch } from \"react-redux\";\n\n// export const fetchTasks = () => {\n//   return async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:3001/tasks\");\n//       if (response.status === 200) {\n//         const dispatch = useDispatch();\n//         const tasks = response.data;\n//         console.log(\"fetching\");\n//         dispatch(taskActions.setTask(tasks));\n//       } else {\n//         throw new Error(\"Failed to fetch tasks from the API.\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };","map":{"version":3,"names":["axios","taskActions","fetchTasks","dispatch","response","get","status","tasks","data","console","log","Error","error","setTasks","state","sortedTasks","sort","a","b","Date","deadline"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/store/useFetchTasks.js"],"sourcesContent":["import axios from \"axios\";\nimport {taskActions} from \"./task-slice\";\n\nexport const fetchTasks = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/tasks\");\n      if (response.status === 200) {\n        const tasks = response.data;\n        console.log(\"fetching\" + tasks);\n        //dispatch(taskActions.setTask(tasks));\n        \n        return tasks;\n      } else {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// export const setTasks = () => {\n//   return async (dispatch) => {\n//       tasks.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n//       while (state.tasks != action.payload){\n//         state.tasks = action.payload;\n//     }\n//   }\n// }\n\n\nexport const setTasks = (state, tasks) => {\n  return (dispatch) => {\n    console.log(\"lol\");\n    const sortedTasks = tasks.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n    //dispatch(taskActions.setTask(sortedTasks));\n    state.tasks = sortedTasks;\n  };\n};\n\n\n// import axios from \"axios\";\n// import { taskActions } from \"./task-slice\";\n// import { useDispatch } from \"react-redux\";\n\n// export const fetchTasks = () => {\n//   return async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:3001/tasks\");\n//       if (response.status === 200) {\n//         const dispatch = useDispatch();\n//         const tasks = response.data;\n//         console.log(\"fetching\");\n//         dispatch(taskActions.setTask(tasks));\n//       } else {\n//         throw new Error(\"Failed to fetch tasks from the API.\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,cAAc;AAExC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,6BAA6B,CAAC;MAC/D,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI;QAC3BC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGH,KAAK,CAAC;QAC/B;;QAEA,OAAOA,KAAK;MACd,CAAC,MAAM;QACL,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;MACxD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEP,KAAK,KAAK;EACxC,OAAQJ,QAAQ,IAAK;IACnBM,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,MAAMK,WAAW,GAAGR,KAAK,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,QAAQ,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,QAAQ,CAAC,CAAC;IACrF;IACAN,KAAK,CAACP,KAAK,GAAGQ,WAAW;EAC3B,CAAC;AACH,CAAC;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}