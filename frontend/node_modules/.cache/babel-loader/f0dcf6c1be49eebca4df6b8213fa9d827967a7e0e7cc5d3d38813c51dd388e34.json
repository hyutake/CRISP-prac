{"ast":null,"code":"// taskAPI.js\n\nimport { taskActions } from \"./task-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nconst fetchTasks = () => {\n  return async dispatch => {\n    try {\n      const response = await fetch(\"http://localhost:3001/tasks\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n      const data = await response.json();\n      console.log(data);\n      dispatch(taskActions.setTasks(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport default fetchTasks;","map":{"version":3,"names":["taskActions","useDispatch","useEffect","fetchTasks","dispatch","response","fetch","ok","Error","data","json","console","log","setTasks","error"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/store/useFetchTasks.js"],"sourcesContent":["// taskAPI.js\n\nimport { taskActions } from \"./task-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nconst fetchTasks = () => {\n    return async (dispatch) => {\n      try {\n        const response = await fetch(\"http://localhost:3001/tasks\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks from the API.\");\n        }\n        const data = await response.json();\n        console.log(data);\n        dispatch(taskActions.setTasks(data));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  };\n\n  export default fetchTasks;\n  "],"mappings":"AAAA;;AAEA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,OAAO;AAEjC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MACxD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBL,QAAQ,CAACJ,WAAW,CAACa,QAAQ,CAACJ,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB;EACF,CAAC;AACH,CAAC;AAED,eAAeX,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}