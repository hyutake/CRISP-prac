{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport useFetchTasks, { fetchTasks, useInitTasks } from \"./useFetchTasks\";\nconst initialTaskState = {\n  tasks: []\n  //quantity: 0,\n};\n\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState: initialTaskState,\n  reducers: {\n    addTask(state, action) {\n      // action will pass an entire task object\n      const task = action.payload;\n      // axios\n      //   .post(\"http://localhost:3001/tasks\", {\n      //     title: task.title,\n      //     description: task.description,\n      //     deadline: task.deadline,\n      //   })\n      state.tasks.push(task);\n    },\n    removeTask(state, action) {\n      // action will pass the id of a task\n      const id = action.payload;\n      state.tasks = state.tasks.filter(task => task._id !== id);\n    },\n    editTask(state, action) {\n      //dispatch can be taken in as arg\n      // action will pass the edited task\n      console.log(action.payload);\n      const task = action.payload;\n      const {\n        id,\n        title,\n        description,\n        deadline,\n        completed\n      } = action.payload;\n\n      //fetchTasks\n      //setTasks\n\n      state.tasks[id] = action.payload;\n\n      //refactor into another event, \n      //have another actions file\n    },\n\n    setTask(state, action) {\n      //action.payload.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n      while (state.tasks != action.payload) {\n        state.tasks = action.payload;\n      }\n    }\n  }\n});\nexport const taskActions = taskSlice.actions;\nexport default taskSlice;","map":{"version":3,"names":["createSlice","axios","useFetchTasks","fetchTasks","useInitTasks","initialTaskState","tasks","taskSlice","name","initialState","reducers","addTask","state","action","task","payload","push","removeTask","id","filter","_id","editTask","console","log","title","description","deadline","completed","setTask","taskActions","actions"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/store/task-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport useFetchTasks, { fetchTasks, useInitTasks } from \"./useFetchTasks\";\nconst initialTaskState = {\n  tasks: [],\n  //quantity: 0,\n};\n\nconst taskSlice = createSlice({\n\t\n  name: \"task\",\n  initialState: initialTaskState,\n  reducers: {\n    addTask(state, action) {\n      // action will pass an entire task object\n\t\tconst task = action.payload;\n      // axios\n      //   .post(\"http://localhost:3001/tasks\", {\n      //     title: task.title,\n      //     description: task.description,\n      //     deadline: task.deadline,\n      //   })\n      state.tasks.push(task);\n    },\n    removeTask(state, action) {\n      // action will pass the id of a task\n      const id = action.payload;\n      state.tasks = state.tasks.filter((task) => task._id !== id);\n    },\n    editTask(state, action) { \n      //dispatch can be taken in as arg\n      // action will pass the edited task\n      console.log(action.payload);\n      const task = action.payload;\n      const { id, title, description, deadline, completed } = action.payload;\n\t\n      //fetchTasks\n      //setTasks\n      \n      state.tasks[id] = action.payload;\n\n      //refactor into another event, \n      //have another actions file\n      \n    },\n    setTask(state, action) {\n\t  //action.payload.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\n      while (state.tasks != action.payload){\n        state.tasks = action.payload;\n      }\n    },\n  },\n});\n\nexport const taskActions = taskSlice.actions;\nexport default taskSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,IAAIC,UAAU,EAAEC,YAAY,QAAQ,iBAAiB;AACzE,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE;EACP;AACF,CAAC;;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAE5BQ,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB;MACJ,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MACvB;MACA;MACA;MACA;MACA;MACA;MACAH,KAAK,CAACN,KAAK,CAACU,IAAI,CAACF,IAAI,CAAC;IACxB,CAAC;IACDG,UAAUA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACxB;MACA,MAAMK,EAAE,GAAGL,MAAM,CAACE,OAAO;MACzBH,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACa,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACM,GAAG,KAAKF,EAAE,CAAC;IAC7D,CAAC;IACDG,QAAQA,CAACT,KAAK,EAAEC,MAAM,EAAE;MACtB;MACA;MACAS,OAAO,CAACC,GAAG,CAACV,MAAM,CAACE,OAAO,CAAC;MAC3B,MAAMD,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAM;QAAEG,EAAE;QAAEM,KAAK;QAAEC,WAAW;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGd,MAAM,CAACE,OAAO;;MAEtE;MACA;;MAEAH,KAAK,CAACN,KAAK,CAACY,EAAE,CAAC,GAAGL,MAAM,CAACE,OAAO;;MAEhC;MACA;IAEF,CAAC;;IACDa,OAAOA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MACxB;MACG,OAAOD,KAAK,CAACN,KAAK,IAAIO,MAAM,CAACE,OAAO,EAAC;QACnCH,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACE,OAAO;MAC9B;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMc,WAAW,GAAGtB,SAAS,CAACuB,OAAO;AAC5C,eAAevB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}