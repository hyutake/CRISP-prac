{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { taskActions } from \"./task-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\n// export const fetchTasks = () => {\n//   return async (dispatch) => {\n//     try {\n//       const response = await axios.get(\"http://localhost:3001/tasks\");\n//       if (response.status === 200) {\n//         const tasks = response.data;\n//         console.log(\"fetching\" + tasks);\n//         dispatch(taskActions.setTask(tasks));\n//         return tasks;\n//       } else {\n//         throw new Error(\"Failed to fetch tasks from the API.\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n\nexport const fetchTasks = tasks => {\n  return async tasks => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/tasks\");\n      if (response.status === 200) {\n        const tasks = response.data;\n        console.log(\"fetching\");\n        console.log(tasks);\n        return tasks;\n      } else {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addTask = newTask => {\n  return async dispatch => {\n    await axios.post(\"http://localhost:3001/tasks\", {\n      title: newTask.title,\n      description: newTask.description,\n      deadline: newTask.deadline\n    });\n    const tasks = await dispatch(fetchTasks());\n    console.log(tasks);\n    tasks = await (await axios.get(\"http://localhost:3001/tasks\")).data;\n    console.log(tasks);\n    //newTaskWithId = null;\n    //return newTaskWithId;\n  };\n};\n\nexport const deleteTask = id => {\n  return async () => {\n    await axios.delete(`http://localhost:3001/tasks/${id}`);\n  };\n};\nexport const editTask = editedTask => {\n  return async () => {\n    const {\n      id,\n      title,\n      description,\n      deadline,\n      completed\n    } = editedTask;\n    axios.put(`http://localhost:3001/tasks/${id}`, {\n      title,\n      description,\n      deadline,\n      completed\n    });\n  };\n};\n\n// export const useInitTasks = () => {\n//   const dispatch = useDispatch();\n//   dispatch(fetchTasks())\n//     .then((tasks) => {\n//       // Handle the fetched tasks\n//       dispatch(taskActions.setTask(tasks));\n//       console.log(tasks);\n//     })\n//     .catch((error) => {\n//       // Handle error if any\n//       console.log(error);\n//     });\n// };\n\nexport const useInitTasks = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchTasksAndInitialize = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/tasks\");\n        if (response.status === 200) {\n          const tasks = response.data;\n          dispatch(fetchTasks()).then(tasks => {\n            // Handle the fetched tasks\n            dispatch(taskActions.setTask(tasks));\n            console.log(tasks);\n          }).catch(error => {\n            // Handle error if any\n            console.log(error);\n          });\n        } else {\n          throw new Error(\"Failed to fetch tasks from the API.\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTasksAndInitialize();\n  }, [dispatch]);\n};\n_s(useInitTasks, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["axios","taskActions","useDispatch","useEffect","fetchTasks","tasks","response","get","status","data","console","log","Error","error","addTask","newTask","dispatch","post","title","description","deadline","deleteTask","id","delete","editTask","editedTask","completed","put","useInitTasks","_s","fetchTasksAndInitialize","then","setTask","catch"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/store/useFetchTasks.js"],"sourcesContent":["import axios from \"axios\";\nimport { taskActions } from \"./task-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\n// export const fetchTasks = () => {\n//   return async (dispatch) => {\n//     try {\n//       const response = await axios.get(\"http://localhost:3001/tasks\");\n//       if (response.status === 200) {\n//         const tasks = response.data;\n//         console.log(\"fetching\" + tasks);\n//         dispatch(taskActions.setTask(tasks));\n//         return tasks;\n//       } else {\n//         throw new Error(\"Failed to fetch tasks from the API.\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n\nexport const fetchTasks = (tasks) => {\n  return async (tasks) => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/tasks\");\n      if (response.status === 200) {\n        const tasks = response.data;\n        console.log(\"fetching\");\n        console.log(tasks);\n        return tasks;\n      } else {\n        throw new Error(\"Failed to fetch tasks from the API.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = (newTask) => {\n  return async (dispatch) => {\n    await axios.post(\"http://localhost:3001/tasks\", {\n      title: newTask.title,\n      description: newTask.description,\n      deadline: newTask.deadline,\n    });\n    const tasks = await dispatch(fetchTasks());\n    console.log(tasks);\n     tasks = await (await axios.get(\"http://localhost:3001/tasks\")).data;\n    \n    console.log(tasks);\n    //newTaskWithId = null;\n    //return newTaskWithId;\n  };\n};\n\nexport const deleteTask = (id) => {\n  return async () => {\n    await axios.delete(`http://localhost:3001/tasks/${id}`);\n  };\n};\n\nexport const editTask = (editedTask) => {\n  return async () => {\n    const { id, title, description, deadline, completed } = editedTask;\n    axios.put(`http://localhost:3001/tasks/${id}`, {\n      title,\n      description,\n      deadline,\n      completed,\n    });\n  };\n};\n\n// export const useInitTasks = () => {\n//   const dispatch = useDispatch();\n//   dispatch(fetchTasks())\n//     .then((tasks) => {\n//       // Handle the fetched tasks\n//       dispatch(taskActions.setTask(tasks));\n//       console.log(tasks);\n//     })\n//     .catch((error) => {\n//       // Handle error if any\n//       console.log(error);\n//     });\n// };\n\nexport const useInitTasks = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchTasksAndInitialize = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/tasks\");\n        if (response.status === 200) {\n          const tasks = response.data;\n          dispatch(fetchTasks())\n            .then((tasks) => {\n              // Handle the fetched tasks\n              dispatch(taskActions.setTask(tasks));\n              console.log(tasks);\n            })\n            .catch((error) => {\n              // Handle error if any\n              console.log(error);\n            });\n        } else {\n          throw new Error(\"Failed to fetch tasks from the API.\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchTasksAndInitialize();\n  }, [dispatch]);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}