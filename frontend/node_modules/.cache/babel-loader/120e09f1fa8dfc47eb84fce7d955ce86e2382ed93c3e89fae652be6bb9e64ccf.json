{"ast":null,"code":"var _jsxFileName = \"/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/components/Tasks/TaskList.js\",\n  _s = $RefreshSig$();\nimport { useState, Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TaskItem from \"./TaskItem\";\nimport classes from \"./TaskList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList(props) {\n  _s();\n  const [filterTitle, setFilterTitle] = useState(\"\");\n  const tasks = useSelector(state => state.task.tasks);\n  // console.log(tasks);\n\n  const filterHandler = event => {\n    setFilterTitle(event.target.value);\n  };\n  console.log(props.loaded);\n  console.lod(\"loading\");\n  const filteredTasks = tasks.filter(task => task.title.includes(filterTitle));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes['task-finder'],\n      onChange: filterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), props.loaded ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) // Render a loading message or spinner\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['task-list'],\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        id: task._id,\n        title: task.title,\n        desc: task.description,\n        deadline: task.deadline\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"A280Kkjf9zxdZULLHakylHn55fc=\", false, function () {\n  return [useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useState","Fragment","useSelector","TaskItem","classes","jsxDEV","_jsxDEV","TaskList","props","_s","filterTitle","setFilterTitle","tasks","state","task","filterHandler","event","target","value","console","log","loaded","lod","filteredTasks","filter","title","includes","children","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_id","desc","description","deadline","_c","$RefreshReg$"],"sources":["/Users/matthewsamynathan/Documents/GitHub/CRISP-prac/frontend/src/components/Tasks/TaskList.js"],"sourcesContent":["import { useState, Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TaskItem from \"./TaskItem\";\nimport classes from \"./TaskList.module.css\";\n\nfunction TaskList(props) {\n\tconst [filterTitle, setFilterTitle] = useState(\"\");\n\n  const tasks = useSelector((state) => state.task.tasks);\n  // console.log(tasks);\n\n  const filterHandler = (event) => {\n\tsetFilterTitle(event.target.value);\n  };\n  console.log(props.loaded);\n  console.lod(\"loading\");\n\n  const filteredTasks = tasks.filter((task) => task.title.includes(filterTitle));\n\n  return (\n    <Fragment>\n      <input className={classes['task-finder']} onChange={filterHandler} />\n      {props.loaded ? (\n        <p>Loading...</p> // Render a loading message or spinner\n      ) : (\n        <div className={classes['task-list']}>\n          {filteredTasks.map((task) => (\n            <TaskItem\n              key={task._id}\n              id={task._id}\n              title={task.title}\n              desc={task.description}\n              deadline={task.deadline}\n            />\n          ))}\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMY,KAAK,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EACtD;;EAEA,MAAMG,aAAa,GAAIC,KAAK,IAAK;IAClCL,cAAc,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACDC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAACa,MAAM,CAAC;EACzBF,OAAO,CAACG,GAAG,CAAC,SAAS,CAAC;EAEtB,MAAMC,aAAa,GAAGX,KAAK,CAACY,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACW,KAAK,CAACC,QAAQ,CAAChB,WAAW,CAAC,CAAC;EAE9E,oBACEJ,OAAA,CAACL,QAAQ;IAAA0B,QAAA,gBACPrB,OAAA;MAAOsB,SAAS,EAAExB,OAAO,CAAC,aAAa,CAAE;MAACyB,QAAQ,EAAEd;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpEzB,KAAK,CAACa,MAAM,gBACXf,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAElB3B,OAAA;MAAKsB,SAAS,EAAExB,OAAO,CAAC,WAAW,CAAE;MAAAuB,QAAA,EAClCJ,aAAa,CAACW,GAAG,CAAEpB,IAAI,iBACtBR,OAAA,CAACH,QAAQ;QAEPgC,EAAE,EAAErB,IAAI,CAACsB,GAAI;QACbX,KAAK,EAAEX,IAAI,CAACW,KAAM;QAClBY,IAAI,EAAEvB,IAAI,CAACwB,WAAY;QACvBC,QAAQ,EAAEzB,IAAI,CAACyB;MAAS,GAJnBzB,IAAI,CAACsB,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf;AAACxB,EAAA,CAlCQF,QAAQ;EAAA,QAGDL,WAAW;AAAA;AAAAsC,EAAA,GAHlBjC,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}